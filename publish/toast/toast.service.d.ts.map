{"version":3,"file":"toast.service.d.ts","sources":["toast.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ComponentRef, ComponentFactory, ApplicationRef, NgZone, ComponentFactoryResolver } from '@angular/core';\nimport { ToastComponent } from './toast.component';\nimport { ToastOptions } from './toast-options.provider';\nexport interface ConfigInterface {\n    content?: any;\n    iconType?: string;\n    mask?: boolean;\n}\nexport declare class ToastService {\n    private _appRef;\n    private _cfr;\n    private _zone;\n    timeout: any;\n    zone: NgZone;\n    compRef: ComponentRef<any>;\n    insertElement: HTMLElement;\n    toastCompFactory: ComponentFactory<ToastComponent>;\n    appRef: ApplicationRef;\n    constructor(_appRef: ApplicationRef, _cfr: ComponentFactoryResolver, _zone: NgZone);\n    _initConfig(config: Object, options: ToastOptions): Object;\n    notice(config: ConfigInterface, type: any, timeInterval: number, onClose: any, mask?: boolean, position?: string): any;\n    /**\n     * Open info dialog\n     */\n    info(content?: string, timeInterval?: number, onClose?: () => void, mask?: boolean, position?: string): any;\n    /**\n     * Open success dialog\n     */\n    success(content?: string, timeInterval?: number, onClose?: () => void, mask?: boolean, position?: string): any;\n    show(content?: string, timeInterval?: number, mask?: boolean, position?: string): any;\n    fail(content?: string, timeInterval?: number, onClose?: () => void, mask?: boolean, position?: string): any;\n    offline(content?: string, timeInterval?: number, onClose?: () => void, mask?: boolean, position?: string): any;\n    loading(content?: string, timeInterval?: number, onClose?: () => void, mask?: boolean, position?: string): any;\n    hide(): void;\n}\n"]}