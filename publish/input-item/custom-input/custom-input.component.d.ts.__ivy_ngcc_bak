import { ElementRef, EventEmitter, OnInit, OnDestroy, NgZone } from '@angular/core';
import { CustomInputService } from './custom-input.service';
export declare class CustomInputComponent implements OnInit, OnDestroy {
    private _ref;
    private _customInputService;
    private _ngZone;
    keyboardPrefixCls: string;
    fakeInputCls: object;
    focus: boolean;
    private _value;
    private _defaultValue;
    private _placeholder;
    private _maxLength;
    private _editable;
    private _disabled;
    private _setFocus;
    private _preventKeyboard;
    private _moneyKeyboardAlign;
    private _fontColor;
    get value(): string;
    set value(v: string);
    set defaultValue(value: string);
    set maxLength(value: number);
    get placeholder(): string;
    set placeholder(value: string);
    set editable(value: boolean);
    set disabled(value: boolean);
    get fontColor(): string;
    set fontColor(value: string);
    set moneyKeyboardAlign(value: string);
    set setFocus(value: any);
    onChange: EventEmitter<any>;
    onBlur: EventEmitter<any>;
    onFocus: EventEmitter<any>;
    clsFakeContainer: boolean;
    clsFakeContainerLeft: boolean;
    constructor(_ref: ElementRef, _customInputService: CustomInputService, _ngZone: NgZone);
    onFakeInputClick(): void;
    inputFocus: () => void;
    doBlur: (ev: any) => void;
    removeBlurListener: () => void;
    addBlurListener: () => void;
    onInputBlur: (value: any) => void;
    onInputFocus: () => void;
    setFakeInputCls: () => void;
    setContainerCls: () => void;
    onKeyboardClick: (keyboardItemValue: any) => void;
    ngOnInit(): void;
    ngOnDestroy(): void;
}
