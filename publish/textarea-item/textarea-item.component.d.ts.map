{"version":3,"file":"textarea-item.component.d.ts","sources":["textarea-item.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, EventEmitter, TemplateRef, AfterContentChecked, ElementRef, Renderer2 } from '@angular/core';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare class TextareaItemComponent implements OnInit, AfterContentChecked, ControlValueAccessor {\n    private element;\n    private render;\n    prefixCls: string;\n    wrapCls: object;\n    labelCls: object;\n    controlCls: object;\n    clearCls: object;\n    hasCount: boolean;\n    characterLength: number;\n    isTitleString: boolean;\n    maxLength: number;\n    private _el;\n    private _prefixListCls;\n    private _value;\n    private _defaultValue;\n    private _placeholder;\n    private _editable;\n    private _disabled;\n    private _clear;\n    private _rows;\n    private _count;\n    private _autoHeight;\n    private _error;\n    private _labelNumber;\n    private _name;\n    private _title;\n    private _focus;\n    private _autoFocus;\n    private _isClear;\n    private _isClickingClear;\n    textRef: any;\n    get value(): string;\n    set value(v: string);\n    get defaultValue(): string;\n    set defaultValue(value: string);\n    get placeholder(): string;\n    set placeholder(value: string);\n    get editable(): boolean;\n    set editable(value: boolean);\n    get disabled(): boolean;\n    set disabled(value: boolean);\n    get clear(): boolean;\n    set clear(value: boolean);\n    get rows(): number;\n    set rows(value: number);\n    get error(): boolean;\n    set error(value: boolean);\n    set labelNumber(value: number);\n    get count(): number;\n    set count(value: number);\n    get prefixListCls(): string;\n    set prefixListCls(value: string);\n    set name(value: string);\n    set autoHeight(value: boolean);\n    get title(): string | TemplateRef<any>;\n    set title(value: string | TemplateRef<any>);\n    set focus(value: any);\n    get autoFocus(): boolean;\n    set autoFocus(value: boolean);\n    onChange: EventEmitter<any>;\n    onBlur: EventEmitter<any>;\n    onFocus: EventEmitter<any>;\n    onErrorClick: EventEmitter<any>;\n    clsItem: boolean;\n    clsDisabled: boolean;\n    clsError: boolean;\n    clsFocus: boolean;\n    clsSingleLine: boolean;\n    clsHasCount: boolean;\n    constructor(element: ElementRef, render: Renderer2);\n    _onChange: (_: any) => void;\n    setCls(): void;\n    setCharacterLength(): void;\n    inputChange(e: any): void;\n    inputFocus(value: any): void;\n    inputBlur(value: any, event: any): void;\n    clearInput(): void;\n    errorClick(e: any): void;\n    reAlignHeight(): void;\n    countSymbols(text?: string): number;\n    writeValue(value: any): void;\n    setDisabledState(isDisabled: boolean): void;\n    registerOnChange(fn: (_: any) => void): void;\n    registerOnTouched(fn: any): void;\n    ngOnInit(): void;\n    ngAfterContentChecked(): void;\n}\n"]}