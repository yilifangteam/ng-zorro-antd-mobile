{"version":3,"file":"picker.component.d.ts","sources":["picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, OnDestroy, ElementRef, AfterViewInit } from '@angular/core';\nimport { PickerOptions } from './picker-options.provider';\nimport { LocaleProviderService } from '../locale-provider/locale-provider.service';\nimport { PickerRef } from './picker-ref.class';\nexport declare class PickerComponent<T = any, R = any> extends PickerRef<T, R> implements OnInit, AfterViewInit, OnDestroy {\n    elementRef: ElementRef;\n    options: PickerOptions;\n    private _localeProviderService;\n    transitionName: string;\n    maskTransitionName: string;\n    startY: number;\n    differY: number;\n    currentY: number;\n    len: number;\n    dom: any;\n    index: number;\n    maxY: number;\n    lineHeight: number;\n    dataForRender: any[];\n    selectedTarget: any[];\n    isMouseDown: boolean;\n    Velocity: {\n        record: (y: any) => void;\n        getVelocity: (y: any) => number;\n    };\n    currentPicker: any;\n    private _unsubscribe$;\n    private _picker;\n    panstart(event: any): void;\n    panmove(event: any): void;\n    panend(event: any): void;\n    constructor(elementRef: ElementRef, options: PickerOptions, _localeProviderService: LocaleProviderService);\n    onChange: (_: any[]) => void;\n    init(): void;\n    getInitValueIndex(dataTemp: any): void;\n    reloadPicker(): void;\n    generateArrayData(targetArr: any): any[];\n    checkArrayDeep(parent: any, init?: boolean): void;\n    ok(): void;\n    combineReslut(): any[];\n    cancel(): void;\n    setTransitionName(): void;\n    setCurrentSelected(target: any, index: any): void;\n    getInstance(): PickerComponent;\n    getElement(): HTMLElement;\n    close(): void;\n    destroy(): void;\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n}\n"]}