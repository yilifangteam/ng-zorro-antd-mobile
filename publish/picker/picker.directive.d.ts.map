{"version":3,"file":"picker.directive.d.ts","sources":["picker.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, NgZone, Renderer2, OnChanges, OnDestroy, ElementRef, EventEmitter, ComponentRef, ViewContainerRef, ComponentFactoryResolver } from '@angular/core';\nimport { PickerComponent } from './picker.component';\nimport { PickerOptions } from './picker-options.provider';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare class PickerDirective implements OnDestroy, OnInit, OnChanges, ControlValueAccessor {\n    private _viewContainerRef;\n    private _elm;\n    private _defaultOptions;\n    private _cfr;\n    private _renderer;\n    private _zone;\n    picker: ComponentRef<PickerComponent>;\n    appendToBodyElement: HTMLElement;\n    value: Array<any>;\n    private _eventListeners;\n    data: Array<any>;\n    cols: Number;\n    mask: boolean;\n    title: string;\n    visible: boolean;\n    okText: string;\n    dismissText: string;\n    disabled: boolean;\n    cascade: boolean;\n    appendToBody: boolean;\n    indicatorStyle: object;\n    onVisibleChange: EventEmitter<boolean>;\n    onPickerChange: EventEmitter<any>;\n    onDismiss: EventEmitter<any>;\n    onChange: (value: any[]) => void;\n    onTouched: () => void;\n    togglePicker(): void;\n    constructor(_viewContainerRef: ViewContainerRef, _elm: ElementRef, _defaultOptions: PickerOptions, _cfr: ComponentFactoryResolver, _renderer: Renderer2, _zone: NgZone);\n    ngOnInit(): void;\n    ngOnChanges(value: any): void;\n    ngOnDestroy(): void;\n    private onDocumentClick;\n    private showPicker;\n    private hidePicker;\n    writeValue(value: any[]): void;\n    registerOnChange(fn: (value: any[]) => void): void;\n    registerOnTouched(fn: () => void): void;\n    setDisabledState(isDisabled: boolean): void;\n    isPickerDataEqual(data1: any, data2: any): any;\n}\n"]}