{"version":3,"file":"slider-handle.component.d.ts","sources":["slider-handle.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { OnInit, ElementRef, EventEmitter, OnDestroy } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nexport declare class SliderHandleComponent implements OnInit, OnDestroy {\n    private _elf;\n    private _sanitizer;\n    left: number;\n    private _min;\n    private _max;\n    private _step;\n    private _value;\n    private _disabled;\n    private _marks;\n    private _handleStyle;\n    private _sliderLength;\n    private _sliderStart;\n    private _minBound;\n    private _maxBound;\n    private _startX;\n    private _isDraging;\n    private _handleStatus;\n    private _handleOffsetX;\n    private _oldValue;\n    set min(value: number);\n    set max(value: number);\n    set minBound(value: number);\n    set maxBound(value: number);\n    set step(value: number);\n    set value(value: number);\n    set disabled(value: boolean);\n    set sliderLength(value: number);\n    set sliderStart(value: number);\n    get handleStyle(): object;\n    set handleStyle(value: object);\n    onChange: EventEmitter<any>;\n    onAfterChange: EventEmitter<any>;\n    panstart(event: any): void;\n    panmove(event: any): void;\n    panend(event: any): void;\n    constructor(_elf: ElementRef, _sanitizer: DomSanitizer);\n    mouseDown: (event: any) => void;\n    mouseMove: (event: any) => void;\n    mouseUp: (event: any) => void;\n    calcValueByPos(pos: any): number;\n    calcValue(offset: any): number;\n    getClosestPoint(val: any): number;\n    getPrecision(step: any): number;\n    calcOffset(value: any): number;\n    pauseEvent(e: any): void;\n    isMouseTarget(event: any): boolean;\n    toConsumableArray(arr: any): any[];\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n}\n"]}