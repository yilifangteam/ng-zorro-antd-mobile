import { OnInit, ElementRef, EventEmitter, OnDestroy } from '@angular/core';
import { DomSanitizer } from '@angular/platform-browser';
export declare class SliderHandleComponent implements OnInit, OnDestroy {
    private _elf;
    private _sanitizer;
    left: number;
    private _min;
    private _max;
    private _step;
    private _value;
    private _disabled;
    private _marks;
    private _handleStyle;
    private _sliderLength;
    private _sliderStart;
    private _minBound;
    private _maxBound;
    private _startX;
    private _isDraging;
    private _handleStatus;
    private _handleOffsetX;
    private _oldValue;
    set min(value: number);
    set max(value: number);
    set minBound(value: number);
    set maxBound(value: number);
    set step(value: number);
    set value(value: number);
    set disabled(value: boolean);
    set sliderLength(value: number);
    set sliderStart(value: number);
    get handleStyle(): object;
    set handleStyle(value: object);
    onChange: EventEmitter<any>;
    onAfterChange: EventEmitter<any>;
    panstart(event: any): void;
    panmove(event: any): void;
    panend(event: any): void;
    constructor(_elf: ElementRef, _sanitizer: DomSanitizer);
    mouseDown: (event: any) => void;
    mouseMove: (event: any) => void;
    mouseUp: (event: any) => void;
    calcValueByPos(pos: any): number;
    calcValue(offset: any): number;
    getClosestPoint(val: any): number;
    getPrecision(step: any): number;
    calcOffset(value: any): number;
    pauseEvent(e: any): void;
    isMouseTarget(event: any): boolean;
    toConsumableArray(arr: any): any[];
    ngOnInit(): void;
    ngOnDestroy(): void;
}
